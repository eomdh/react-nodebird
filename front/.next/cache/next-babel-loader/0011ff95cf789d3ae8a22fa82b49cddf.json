{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axiosos.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000); // 서버가 없기 떄문에 비동기적인 효과\n\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","axios","logInAPI","data","axiosos","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction logInAPI(data) {\r\n  return axiosos.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);  // 서버가 없기 떄문에 비동기적인 효과\r\n    yield put({\r\n      type: 'LOG_IN_SUCCESS',\r\n      data: action.data\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_IN_FAILURE',\r\n      data: err.response.data\r\n    })\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: 'LOG_OUT_SUCCESS',\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_OUT_FAILURE',\r\n      data: err.response.data\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n  ])\r\n}"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,OAAOC,OAAO,CAACC,IAAR,CAAa,YAAb,EAA2BF,IAA3B,CAAP;AACD;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;EACtB,IAAI;IACF;IACA,MAAMV,KAAK,CAAC,IAAD,CAAX,CAFE,CAEkB;;IACpB,MAAME,GAAG,CAAC;MACRS,IAAI,EAAE,gBADE;MAERL,IAAI,EAAEI,MAAM,CAACJ;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOM,GAAP,EAAY;IACZ,MAAMV,GAAG,CAAC;MACRS,IAAI,EAAE,gBADE;MAERL,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASQ,SAAT,GAAqB;EACnB,OAAOV,KAAK,CAACI,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUO,MAAV,GAAmB;EACjB,IAAI;IACF;IACA,MAAMf,KAAK,CAAC,IAAD,CAAX;IACA,MAAME,GAAG,CAAC;MACRS,IAAI,EAAE;IADE,CAAD,CAAT;EAGD,CAND,CAME,OAAOC,GAAP,EAAY;IACZ,MAAMV,GAAG,CAAC;MACRS,IAAI,EAAE,iBADE;MAERL,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;IAFX,CAAD,CAAT;EAID;AACF;;AAED,UAAUU,UAAV,GAAuB;EACrB,MAAMb,UAAU,CAAC,gBAAD,EAAmBM,KAAnB,CAAhB;AACD;;AAED,UAAUQ,WAAV,GAAwB;EACtB,MAAMd,UAAU,CAAC,iBAAD,EAAoBY,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;EAClC,MAAMnB,GAAG,CAAC,CACRE,IAAI,CAACe,UAAD,CADI,EAERf,IAAI,CAACgB,WAAD,CAFI,CAAD,CAAT;AAID"},"metadata":{},"sourceType":"module"}