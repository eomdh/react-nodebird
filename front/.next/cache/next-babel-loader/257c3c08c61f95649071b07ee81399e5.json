{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\n;\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\n\n;\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.id}/comment`, data);\n}\n\n;\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n;\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\n;\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\n;\nexport default function* postSaga() {\n  yield all([fork(watchLoadPost), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}\n;","map":{"version":3,"names":["all","call","delay","fork","put","takeLatest","axios","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","data","get","loadPosts","action","result","type","err","response","addPostAPI","post","content","addPost","id","removePostAPI","delete","removePost","addCommentAPI","addComment","watchLoadPost","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/sagas/post.js"],"sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, \r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get('/posts', data);\r\n};\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', { content: data });\r\n};\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete('/api/post', data)\r\n};\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result = yield call(removePostAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: action.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.id}/comment`, data)\r\n};\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n};\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n};\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n};\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n};\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLoadPost),\r\n    fork(watchAddPost),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n  ])\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}