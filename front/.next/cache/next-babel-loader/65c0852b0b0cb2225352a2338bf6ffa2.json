{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DeokHyeon\\\\Desktop\\\\react-nodebird\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { Button, Form, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2]; // 글쓰기가 완료되면 text 초기화\n\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmitPost = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    return dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitPost,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths && imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3065/\".concat(v),\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"2syWW4iKLXMTcx0XdgkN+m9ofVM=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useDispatch","useSelector","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","useInput","Button","Form","Input","PostForm","dispatch","state","post","imagePaths","addPostDone","text","onChangeText","setText","onSubmitPost","trim","alert","formData","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","margin","map","v","i","display","width"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const [text, onChangeText, setText] = useInput('');\r\n\r\n  // 글쓰기가 완료되면 text 초기화\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText('');\r\n    }\r\n  }, [addPostDone])\r\n\r\n  const onSubmitPost = useCallback(() => {\r\n    if (!text || !text.trim()) {\r\n      return alert('게시글을 작성하세요.');\r\n    }\r\n    const formData = new FormData();\r\n    imagePaths.forEach((p) => {\r\n      formData.append('image', p);\r\n    });\r\n    formData.append('content', text);\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    });\r\n  }, [text, imagePaths]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    console.log('images', e.target.files);\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append('image', f);\r\n    });\r\n    return dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  }, []);\r\n\r\n  const onRemoveImage = useCallback((index) => () => {\r\n    dispatch({\r\n      type: REMOVE_IMAGE,\r\n      data: index,\r\n    })\r\n  })\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmitPost}>\r\n      <Input.TextArea \r\n        value={text} \r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths && imagePaths.map((v, i) => {\r\n          return (\r\n            <div key={v} style={{ display: 'inline-block' }}>\r\n              <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\r\n              <div>\r\n                <Button onClick={onRemoveImage(i)}>제거</Button>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </Form>\r\n  )\r\n};\r\n\r\nexport default PostForm;"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,EAAkDC,YAAlD,QAAsE,kBAAtE;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EAAA;;EACrB,IAAMC,QAAQ,GAAGV,WAAW,EAA5B;;EACA,mBAAoCC,WAAW,CAAC,UAACU,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAjB;EAAA,CAAD,CAA/C;EAAA,IAAQC,UAAR,gBAAQA,UAAR;EAAA,IAAoBC,WAApB,gBAAoBA,WAApB;;EACA,gBAAsCT,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOU,IAAP;EAAA,IAAaC,YAAb;EAAA,IAA2BC,OAA3B,iBAHqB,CAKrB;;;EACAnB,SAAS,CAAC,YAAM;IACd,IAAIgB,WAAJ,EAAiB;MACfG,OAAO,CAAC,EAAD,CAAP;IACD;EACF,CAJQ,EAIN,CAACH,WAAD,CAJM,CAAT;EAMA,IAAMI,YAAY,GAAGrB,WAAW,CAAC,YAAM;IACrC,IAAI,CAACkB,IAAD,IAAS,CAACA,IAAI,CAACI,IAAL,EAAd,EAA2B;MACzB,OAAOC,KAAK,CAAC,aAAD,CAAZ;IACD;;IACD,IAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAT,UAAU,CAACU,OAAX,CAAmB,UAACC,CAAD,EAAO;MACxBH,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBD,CAAzB;IACD,CAFD;IAGAH,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BV,IAA3B;IACAL,QAAQ,CAAC;MACPgB,IAAI,EAAExB,gBADC;MAEPyB,IAAI,EAAEN;IAFC,CAAD,CAAR;EAID,CAb+B,EAa7B,CAACN,IAAD,EAAOF,UAAP,CAb6B,CAAhC;EAeA,IAAMe,UAAU,GAAG7B,MAAM,EAAzB;EACA,IAAM8B,kBAAkB,GAAGhC,WAAW,CAAC,YAAM;IAC3C+B,UAAU,CAACE,OAAX,CAAmBC,KAAnB;EACD,CAFqC,EAEnC,CAACH,UAAU,CAACE,OAAZ,CAFmC,CAAtC;EAIA,IAAME,cAAc,GAAGnC,WAAW,CAAC,UAACoC,CAAD,EAAO;IACxCC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,CAAC,CAACG,MAAF,CAASC,KAA/B;IACA,IAAMC,aAAa,GAAG,IAAIhB,QAAJ,EAAtB;IACA,GAAGC,OAAH,CAAWgB,IAAX,CAAgBN,CAAC,CAACG,MAAF,CAASC,KAAzB,EAAgC,UAACG,CAAD,EAAO;MACrCF,aAAa,CAACb,MAAd,CAAqB,OAArB,EAA8Be,CAA9B;IACD,CAFD;IAGA,OAAO9B,QAAQ,CAAC;MACdgB,IAAI,EAAEvB,qBADQ;MAEdwB,IAAI,EAAEW;IAFQ,CAAD,CAAf;EAID,CAViC,EAU/B,EAV+B,CAAlC;EAYA,IAAMG,aAAa,GAAG5C,WAAW,CAAC,UAAC6C,KAAD;IAAA,OAAW,YAAM;MACjDhC,QAAQ,CAAC;QACPgB,IAAI,EAAEtB,YADC;QAEPuB,IAAI,EAAEe;MAFC,CAAD,CAAR;IAID,CALiC;EAAA,CAAD,CAAjC;EAMA,oBACE,QAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAV,CAAb;IAAwC,OAAO,EAAC,qBAAhD;IAAsE,QAAQ,EAAEzB,YAAhF;IAAA,wBACE,QAAC,KAAD,CAAO,QAAP;MACE,KAAK,EAAEH,IADT;MAEE,QAAQ,EAAEC,YAFZ;MAGE,SAAS,EAAE,GAHb;MAIE,WAAW,EAAC;IAJd;MAAA;MAAA;MAAA;IAAA,SADF,eAOE;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,OAAxB;QAAgC,QAAQ,MAAxC;QAAyC,MAAM,MAA/C;QAAgD,GAAG,EAAEY,UAArD;QAAiE,QAAQ,EAAEI;MAA3E;QAAA;QAAA;QAAA;MAAA,SADF,eAEE,QAAC,MAAD;QAAQ,OAAO,EAAEH,kBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SAFF,eAGE,QAAC,MAAD;QAAQ,IAAI,EAAC,SAAb;QAAuB,KAAK,EAAE;UAAE,SAAO;QAAT,CAA9B;QAAkD,QAAQ,EAAC,QAA3D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SAHF;IAAA;MAAA;MAAA;MAAA;IAAA,SAPF,eAYE;MAAA,UACGhB,UAAU,IAAIA,UAAU,CAAC+B,GAAX,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;QACtC,oBACE;UAAa,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAX,CAApB;UAAA,wBACE;YAAK,GAAG,kCAA2BF,CAA3B,CAAR;YAAwC,KAAK,EAAE;cAAEG,KAAK,EAAE;YAAT,CAA/C;YAAmE,GAAG,EAAEH;UAAxE;YAAA;YAAA;YAAA;UAAA,SADF,eAEE;YAAA,uBACE,QAAC,MAAD;cAAQ,OAAO,EAAEJ,aAAa,CAACK,CAAD,CAA9B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,SAFF;QAAA,GAAUD,CAAV;UAAA;UAAA;UAAA;QAAA,SADF;MAQD,CATc;IADjB;MAAA;MAAA;MAAA;IAAA,SAZF;EAAA;IAAA;IAAA;IAAA;EAAA,SADF;AA2BD,CA7ED;;GAAMpC,Q;UACaT,W,EACmBC,W,EACEI,Q;;;KAHlCI,Q;AA+EN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}