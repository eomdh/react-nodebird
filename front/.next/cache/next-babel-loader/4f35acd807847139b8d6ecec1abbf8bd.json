{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Hashtag = function Hashtag() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            data: tag,\n            lastId: lastId\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n  return /*#__PURE__*/_jsx(AppLayout, {\n    children: mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsx(PostCard, {\n        post: c\n      }, c.id);\n    })\n  });\n};\n\nexport var __N_SSP = true;\nexport default Hashtag;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useRouter","LOAD_HASHTAG_POSTS_REQUEST","PostCard","AppLayout","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","data","addEventListener","removeEventListener","map","c"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/pages/hashtag/[tag].js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst Hashtag = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { tag } = router.query;\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_HASHTAG_POSTS_REQUEST,\r\n            data: tag,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {mainPosts.map((c) => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  console.log(context);\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  console.log(context);\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: context.params.tag,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Hashtag;"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAIA,SAASC,0BAAT,QAA2C,qBAA3C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAGA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,IAAMQ,MAAM,GAAGN,SAAS,EAAxB;EACA,IAAQO,GAAR,GAAgBD,MAAM,CAACE,KAAvB,CAAQD,GAAR;;EACA,mBAAsDR,WAAW,CAAC,UAACU,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAjB;EAAA,CAAD,CAAjE;EAAA,IAAQC,SAAR,gBAAQA,SAAR;EAAA,IAAmBC,YAAnB,gBAAmBA,YAAnB;EAAA,IAAiCC,gBAAjC,gBAAiCA,gBAAjC;;EAEAhB,SAAS,CAAC,YAAM;IACd,IAAMiB,QAAQ,GAAG,SAAXA,QAAW,GAAM;MACrB,IAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;QACxG,IAAIR,YAAY,IAAI,CAACC,gBAArB,EAAuC;UAAA;;UACrC,IAAMQ,MAAM,iBAAGV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;UACAlB,QAAQ,CAAC;YACPmB,IAAI,EAAEvB,0BADC;YAEPwB,IAAI,EAAElB,GAFC;YAGPc,MAAM,EAANA;UAHO,CAAD,CAAR;QAKD;MACF;IACF,CAXD;;IAYAN,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;IACA,OAAO,YAAM;MACXC,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;IACD,CAFD;EAGD,CAjBQ,EAiBN,CAACH,SAAS,CAACW,MAAX,EAAmBV,YAAnB,EAAiCL,GAAjC,EAAsCM,gBAAtC,CAjBM,CAAT;EAmBA,oBACE,KAAC,SAAD;IAAA,UACGF,SAAS,CAACiB,GAAV,CAAc,UAACC,CAAD;MAAA,oBACb,KAAC,QAAD;QAAqB,IAAI,EAAEA;MAA3B,GAAeA,CAAC,CAACN,EAAjB,CADa;IAAA,CAAd;EADH,EADF;AAOD,CAhCD;;;AAqDA,eAAenB,OAAf"},"metadata":{},"sourceType":"module"}