{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\n;\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\n;\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\n;\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\n;\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\n;\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n;\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\n;\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\n;\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\n;\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\n;\nexport default function* postSaga() {\n  yield all([fork(watchLoadPost), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment), fork(watchLikePost), fork(watchUnlikePost)]);\n}\n;","map":{"version":3,"names":["all","call","delay","fork","put","takeLatest","axios","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","data","get","loadPosts","action","result","type","err","response","addPostAPI","post","content","addPost","id","removePostAPI","delete","removePost","addCommentAPI","postId","addComment","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","watchLoadPost","watchAddPost","watchRemovePost","watchAddComment","watchLikePost","watchUnlikePost","postSaga"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/sagas/post.js"],"sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n  LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get('/posts', data);\r\n};\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', { content: data });\r\n};\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n};\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data)\r\n};\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`)\r\n};\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`)\r\n};\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n};\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n};\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n};\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n};\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n};\r\n\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n};\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLoadPost),\r\n    fork(watchAddPost),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n  ])\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}