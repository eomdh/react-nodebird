{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axiosos.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000); // 서버가 없기 떄문에 비동기적인 효과\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('http://localhost:3065/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"names":["all","call","delay","fork","put","takeLatest","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","logInAPI","data","axiosos","post","logIn","action","type","err","error","response","logOutAPI","logOut","console","signUpAPI","signUp","result","log","followAPI","follow","unfollowAPI","unfollow","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnfollow","userSaga"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/sagas/user.js"],"sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { \r\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \r\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE\r\n} from \"../reducers/user\";\r\n\r\nfunction logInAPI(data) {\r\n  return axiosos.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);  // 서버가 없기 떄문에 비동기적인 효과\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post('http://localhost:3065/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction followAPI() {\r\n  return axios.post('/api/follow')\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n  return axios.post('/api/unfollow')\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n  ])\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}