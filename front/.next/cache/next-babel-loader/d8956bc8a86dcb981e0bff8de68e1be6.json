{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeokHyeon\\\\Desktop\\\\react-nodebird\\\\front\\\\components\\\\FollowButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { UNFOLLOW_REQUEST, FOLLOW_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar FollowButton = function FollowButton(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading;\n\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  }); // 팔로잉 여부\n\n  var onClickButton = useCallback(function () {\n    console.log(post.User);\n\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: {\n          id: post.User.id,\n          nickname: post.User.nickname\n        }\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === me.id) {\n    // 게시글 작성자 아이디와 로그인 유저의 아이디가 같으면 안보이게\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FollowButton, \"P7jRlVn2dt0C1rtUYQNokyCC1LM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FollowButton;\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"names":["React","useCallback","PropTypes","useDispatch","useSelector","Button","UNFOLLOW_REQUEST","FOLLOW_REQUEST","FollowButton","post","dispatch","state","user","me","followLoading","unfollowLoading","isFollowing","Followings","find","v","id","User","onClickButton","console","log","type","data","nickname","propTypes","object","isRequired"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/components/FollowButton.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport { UNFOLLOW_REQUEST, FOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButton = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { me, followLoading, unfollowLoading  } = useSelector((state) => state.user);\r\n  const isFollowing =  me?.Followings.find((v) => v.id === post.User.id);  // 팔로잉 여부\r\n\r\n  const onClickButton = useCallback(() => {\r\n    console.log(post.User);\r\n    if (isFollowing) {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: { id: post.User.id, nickname: post.User.nickname }\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: FOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      })\r\n    }\r\n  }, [isFollowing]);\r\n\r\n  if (post.User.id === me.id) {   // 게시글 작성자 아이디와 로그인 유저의 아이디가 같으면 안보이게\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\r\n      {isFollowing ? '언팔로우' : '팔로우'}\r\n    </Button>\r\n  )\r\n};\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default FollowButton;"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAc;EAAA;;EAAA,IAAXC,IAAW,QAAXA,IAAW;EACjC,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;;EACA,mBAAgDC,WAAW,CAAC,UAACO,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAjB;EAAA,CAAD,CAA3D;EAAA,IAAQC,EAAR,gBAAQA,EAAR;EAAA,IAAYC,aAAZ,gBAAYA,aAAZ;EAAA,IAA2BC,eAA3B,gBAA2BA,eAA3B;;EACA,IAAMC,WAAW,GAAIH,EAAJ,aAAIA,EAAJ,uBAAIA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAoB,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA1B;EAAA,CAApB,CAArB,CAHiC,CAGwC;;EAEzE,IAAME,aAAa,GAAGrB,WAAW,CAAC,YAAM;IACtCsB,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACY,IAAjB;;IACA,IAAIL,WAAJ,EAAiB;MACfN,QAAQ,CAAC;QACPe,IAAI,EAAEnB,gBADC;QAEPoB,IAAI,EAAE;UAAEN,EAAE,EAAEX,IAAI,CAACY,IAAL,CAAUD,EAAhB;UAAoBO,QAAQ,EAAElB,IAAI,CAACY,IAAL,CAAUM;QAAxC;MAFC,CAAD,CAAR;IAID,CALD,MAKO;MACLjB,QAAQ,CAAC;QACPe,IAAI,EAAElB,cADC;QAEPmB,IAAI,EAAEjB,IAAI,CAACY,IAAL,CAAUD;MAFT,CAAD,CAAR;IAID;EACF,CAbgC,EAa9B,CAACJ,WAAD,CAb8B,CAAjC;;EAeA,IAAIP,IAAI,CAACY,IAAL,CAAUD,EAAV,KAAiBP,EAAE,CAACO,EAAxB,EAA4B;IAAI;IAC9B,OAAO,IAAP;EACD;;EAED,oBACE,QAAC,MAAD;IAAQ,OAAO,EAAEN,aAAa,IAAIC,eAAlC;IAAmD,OAAO,EAAEO,aAA5D;IAAA,UACGN,WAAW,GAAG,MAAH,GAAY;EAD1B;IAAA;IAAA;IAAA;EAAA,SADF;AAKD,CA7BD;;GAAMR,Y;UACaL,W,EAC+BC,W;;;KAF5CI,Y;AA+BNA,YAAY,CAACoB,SAAb,GAAyB;EACvBnB,IAAI,EAAEP,SAAS,CAAC2B,MAAV,CAAiBC;AADA,CAAzB;AAIA,eAAetB,YAAf"},"metadata":{},"sourceType":"module"}