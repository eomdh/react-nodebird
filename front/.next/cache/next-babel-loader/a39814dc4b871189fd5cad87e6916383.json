{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initialState = {\n  user: {},\n  post: {}\n}; // (이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: _objectSpread(_objectSpread({}, state.user), {}, {\n            isLoggedIn: true,\n            user: action.data\n          })\n        });\n      }\n\n    case 'LOG_OUT':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: _objectSpread(_objectSpread({}, state.user), {}, {\n            isLoggedIn: false,\n            user: null\n          })\n        });\n      }\n\n    default:\n      {\n        // Reducer 초기화 할때 switch문도 실행되므로, default 설정 필수\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","initialState","user","post","rootReducer","state","action","type","payload","isLoggedIn","data"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n  user: {\r\n\r\n  },\r\n  post: {\r\n\r\n  }\r\n};\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return { ...state, ...action.payload };\r\n    case 'LOG_IN': {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          isLoggedIn: true,\r\n          user: action.data\r\n        }\r\n      };\r\n    }\r\n    case 'LOG_OUT': {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        }\r\n      };\r\n    }\r\n\r\n    default: {  // Reducer 초기화 할때 switch문도 실행되므로, default 설정 필수\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootReducer;"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EADa;EAInBC,IAAI,EAAE;AAJa,CAArB,C,CASA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,OAAL;MACE,uCAAYK,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;IACF,KAAK,QAAL;MAAe;QACb,uCACKH,KADL;UAEEH,IAAI,kCACCG,KAAK,CAACH,IADP;YAEFO,UAAU,EAAE,IAFV;YAGFP,IAAI,EAAEI,MAAM,CAACI;UAHX;QAFN;MAQD;;IACD,KAAK,SAAL;MAAgB;QACd,uCACKL,KADL;UAEEH,IAAI,kCACCG,KAAK,CAACH,IADP;YAEFO,UAAU,EAAE,KAFV;YAGFP,IAAI,EAAE;UAHJ;QAFN;MAQD;;IAED;MAAS;QAAG;QACV,yBACKG,KADL;MAGD;EA5BH;AA8BD,CA/BD;;AAiCA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}