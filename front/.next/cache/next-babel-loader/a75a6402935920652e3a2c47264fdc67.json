{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'deokhyeon'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'yeji'\n      },\n      content: '안녕하세요~'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'sangwon'\n      },\n      content: '반갑습니다!'\n    }],\n    imagePaths: [],\n    // 이미지 업로드할 때 이미지 경로들\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null\n  }]\n};\ninitialState.mainPosts.concat(Array(20).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n})));\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: 'eomdh'\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'eomdh'\n  }\n}); // reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\n\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.postId);\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","concat","Array","fill","map","name","findName","lorem","paragraph","image","sentence","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","v","post","find","postId"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n  mainPosts: [{\r\n    id: 1,\r\n    User: {\r\n      id: 1,\r\n      nickname: 'deokhyeon',\r\n    },\r\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\r\n    Images: [{\r\n      id: shortId.generate(),\r\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n    }, {\r\n      id: shortId.generate(),\r\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n    }, {\r\n      id: shortId.generate(),\r\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n    }],\r\n    Comments: [{\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: 'yeji',\r\n      },\r\n      content: '안녕하세요~',\r\n    }, {\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: 'sangwon',\r\n      },\r\n      content: '반갑습니다!'\r\n    }],\r\n    imagePaths: [],   // 이미지 업로드할 때 이미지 경로들\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n  }],\r\n};\r\n\r\ninitialState.mainPosts.concat(\r\n  Array(20).fill().map(() => ({\r\n    id: shortId.generate(),\r\n    User: {\r\n      id: shortId.generate(),\r\n      nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images: [{\r\n      src: faker.image.image(),\r\n    }],\r\n    Comments: [{\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: faker.lorem.sentence(),\r\n    }],\r\n  }))\r\n);\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'eomdh',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'eomdh',\r\n  },\r\n});\r\n\r\n// reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.unshift(dummyComment(action.data.content));\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n\r\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}