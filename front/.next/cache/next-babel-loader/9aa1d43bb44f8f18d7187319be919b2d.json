{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DeokHyeon\\\\Desktop\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useSelector } from \"react-redux\";\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));\n_c = CardWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpend = _useState2[0],\n      setCommentFormOpend = _useState2[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    }); // prev에는 liked의 이전 데이터가 들어가있음\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpend(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retrweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), commentFormOpend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 27\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"zYqhsb2OhGFyppZ/g1oHdMMUA/A=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    UserId: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"names":["React","useCallback","useState","PropTypes","useSelector","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","styled","PostImages","CommentForm","PostCardContent","CardWrapper","div","PostCard","post","liked","setLiked","commentFormOpend","setCommentFormOpend","id","state","user","me","onToggleLike","prev","onToggleComment","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","any","UserId","isRequired"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/components/PostCard.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\n\r\nconst CardWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpend, setCommentFormOpend] = useState(false);  \r\n  const id = useSelector((state) => state.user.me?.id);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);    // prev에는 liked의 이전 데이터가 들어가있음\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpend((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retrweet\" />,\r\n          liked\r\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover key=\"more\" content={(\r\n            <Button.Group>\r\n              {id && post.User.id === id ? \r\n              (\r\n                <>\r\n                  <Button>수정</Button>\r\n                  <Button type=\"danger\">삭제</Button>\r\n                </>\r\n              ) : <Button>신고</Button>}\r\n            </Button.Group>\r\n          )}>\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpend && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item)=> (\r\n              <li>\r\n                <Comment \r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>)}\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.any),\r\n    Images: PropTypes.arrayOf(PropTypes.any),\r\n  }),\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    UserId: PropTypes.number,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.any),\r\n    Images: PropTypes.arrayOf(PropTypes.any),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}