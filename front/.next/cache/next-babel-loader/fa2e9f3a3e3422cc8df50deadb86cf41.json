{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  // 이미지 업로드할 때 이미지 경로들\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n}); // reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        draft.imagePaths = action.data;\n        break;\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers = post.Likers.filter(v => v.id !== action.data.PostId);\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","addCommentLoading","addCommentDone","addCommentError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","id","PostId","i","post","find","Comments","Likers","push","UserId"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/reducers/post.js"],"sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],   // 이미지 업로드할 때 이미지 경로들\r\n  hasMorePosts: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n};\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n// reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data.concat(draft.mainPosts);\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case UPLOAD_IMAGES_REQUEST:\r\n        draft.uploadImagesLoading = true;\r\n        draft.uploadImagesDone = false;\r\n        draft.uploadImagesError = null;\r\n        break;\r\n      case UPLOAD_IMAGES_SUCCESS:\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        draft.imagePaths = action.data;\r\n        break;\r\n      case UPLOAD_IMAGES_FAILURE:\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesError = action.error;\r\n        break;\r\n      case REMOVE_IMAGE:\r\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n\r\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.PostId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}