{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 400) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id,\n            lastId\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id, loadPostsLoading]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: `${userInfo.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: \"https://nodebird.com/favicon.ico\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/user/${id}`\n      })]\n    }), userInfo ? /*#__PURE__*/_jsx(Card, {\n      actions: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Posts]\n      }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Followings]\n      }, \"following\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Followers]\n      }, \"follower\")],\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        avatar: /*#__PURE__*/_jsx(Avatar, {\n          children: userInfo.nickname[0]\n        }),\n        title: userInfo.nickname\n      })\n    }) : null, mainPosts.map(post => /*#__PURE__*/_jsx(PostCard, {\n      post: post\n    }, post.id))]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default User;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","axios","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","PostCard","wrapper","AppLayout","User","dispatch","router","id","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","userInfo","user","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","type","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"sources":["C:/Users/DeokHyeon/Desktop/react-nodebird/front/pages/user/[id].js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst User = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 400) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            data: id,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, id, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {userInfo && (\r\n        <Head>\r\n          <title>\r\n            {userInfo.nickname}\r\n            님의 글\r\n          </title>\r\n          <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n          <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n          <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n          <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\r\n          <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n        </Head>\r\n      )}\r\n      {userInfo\r\n        ? (\r\n          <Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                짹짹\r\n                <br />\r\n                {userInfo.Posts}\r\n              </div>,\r\n              <div key=\"following\">\r\n                팔로잉\r\n                <br />\r\n                {userInfo.Followings}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                팔로워\r\n                <br />\r\n                {userInfo.Followers}\r\n              </div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n              title={userInfo.nickname}\r\n            />\r\n          </Card>\r\n        )\r\n        : null}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default User;"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,qBAAxD;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;EACA,MAAMgB,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAAEW;EAAF,IAASD,MAAM,CAACE,KAAtB;EACA,MAAM;IAAEC,SAAF;IAAaC,YAAb;IAA2BC;EAA3B,IAAgDpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAjE;EACA,MAAM;IAAEC;EAAF,IAAevB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAhC;EAEA1B,SAAS,CAAC,MAAM;IACd,MAAM2B,QAAQ,GAAG,MAAM;MACrB,IAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;QACxG,IAAIZ,YAAY,IAAI,CAACC,gBAArB,EAAuC;UAAA;;UACrC,MAAMY,MAAM,iBAAGd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCjB,EAAhD;UACAF,QAAQ,CAAC;YACPoB,IAAI,EAAE3B,uBADC;YAEP4B,IAAI,EAAEnB,EAFC;YAGPgB;UAHO,CAAD,CAAR;QAKD;MACF;IACF,CAXD;;IAYAN,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;IACA,OAAO,MAAM;MACXC,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;IACD,CAFD;EAGD,CAjBQ,EAiBN,CAACP,SAAS,CAACe,MAAX,EAAmBd,YAAnB,EAAiCH,EAAjC,EAAqCI,gBAArC,CAjBM,CAAT;EAmBA,oBACE,MAAC,SAAD;IAAA,WACGG,QAAQ,iBACP,MAAC,IAAD;MAAA,wBACE;QAAA,WACGA,QAAQ,CAACe,QADZ;MAAA,EADF,eAKE;QAAM,IAAI,EAAC,aAAX;QAAyB,OAAO,EAAG,GAAEf,QAAQ,CAACe,QAAS;MAAvD,EALF,eAME;QAAM,QAAQ,EAAC,UAAf;QAA0B,OAAO,EAAG,GAAEf,QAAQ,CAACe,QAAS;MAAxD,EANF,eAOE;QAAM,QAAQ,EAAC,gBAAf;QAAgC,OAAO,EAAG,GAAEf,QAAQ,CAACe,QAAS;MAA9D,EAPF,eAQE;QAAM,QAAQ,EAAC,UAAf;QAA0B,OAAO,EAAC;MAAlC,EARF,eASE;QAAM,QAAQ,EAAC,QAAf;QAAwB,OAAO,EAAG,6BAA4BtB,EAAG;MAAjE,EATF;IAAA,EAFJ,EAcGO,QAAQ,gBAEL,KAAC,IAAD;MACE,OAAO,EAAE,cACP;QAAA,wCAEE,cAFF,EAGGA,QAAQ,CAACgB,KAHZ;MAAA,GAAS,MAAT,CADO,eAMP;QAAA,8CAEE,cAFF,EAGGhB,QAAQ,CAACiB,UAHZ;MAAA,GAAS,WAAT,CANO,eAWP;QAAA,8CAEE,cAFF,EAGGjB,QAAQ,CAACkB,SAHZ;MAAA,GAAS,UAAT,CAXO,CADX;MAAA,uBAmBE,KAAC,IAAD,CAAM,IAAN;QACE,MAAM,eAAE,KAAC,MAAD;UAAA,UAASlB,QAAQ,CAACe,QAAT,CAAkB,CAAlB;QAAT,EADV;QAEE,KAAK,EAAEf,QAAQ,CAACe;MAFlB;IAnBF,EAFK,GA2BL,IAzCN,EA0CGpB,SAAS,CAACwB,GAAV,CAAepB,IAAD,iBAAU,KAAC,QAAD;MAAwB,IAAI,EAAEA;IAA9B,GAAeA,IAAI,CAACN,EAApB,CAAxB,CA1CH;EAAA,EADF;AA8CD,CAxED;;AA0EA,OAAO,MAAM2B,kBAAkB,GAAGhC,OAAO,CAACgC,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;EAC9E,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;EACAvC,KAAK,CAAC0C,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;EACA,IAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;IACzBvC,KAAK,CAAC0C,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;EACD;;EACDD,OAAO,CAACM,KAAR,CAAcpC,QAAd,CAAuB;IACrBoB,IAAI,EAAE3B,uBADe;IAErB4B,IAAI,EAAES,OAAO,CAACO,MAAR,CAAenC;EAFA,CAAvB;EAIA4B,OAAO,CAACM,KAAR,CAAcpC,QAAd,CAAuB;IACrBoB,IAAI,EAAE1B;EADe,CAAvB;EAGAoC,OAAO,CAACM,KAAR,CAAcpC,QAAd,CAAuB;IACrBoB,IAAI,EAAEzB,iBADe;IAErB0B,IAAI,EAAES,OAAO,CAACO,MAAR,CAAenC;EAFA,CAAvB;EAIA4B,OAAO,CAACM,KAAR,CAAcpC,QAAd,CAAuBX,GAAvB;EACA,MAAMyC,OAAO,CAACM,KAAR,CAAcE,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAnBiC,CAA3B;AAqBP,eAAexC,IAAf"},"metadata":{},"sourceType":"module"}